name: build-website
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  jekyll:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        branch: [slicer-org, download-slicer-org, deploy-download-preview]
        include:
          - branch: download-slicer-org
            custom_opts: '--config _config.yml,_config_download.yml'
          - branch: deploy-download-preview
            custom_opts: '--config _config.yml,_config_download.yml,_config_netlify_deploy_download_preview.yml'
    env:
      deploy_download_preview: ${{ matrix.branch == 'deploy-download-preview' && github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' }}
    steps:
    - name: ðŸ“‚ setup
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

    - name: ðŸ’Ž setup ruby
      uses: ruby/setup-ruby@bc1dd263b68cb5626dbb55d5c89777d79372c484 # v1.151.0
      with:
        ruby-version: 2.7 # can change this to 2.7 or whatever version you prefer

    # See https://github.com/ouzi-dev/commit-status-updater
    - name: Update status check for deploy-download-preview to pending
      if: env.deploy_download_preview == 'true'
      uses: ouzi-dev/commit-status-updater@219d3f932547cad092e384c7a36bf4d963739c35 # v2.0.1
      with:
        name: 'netlify/deploy-download-preview'
        status: 'pending'
        url: https://app.netlify.com/sites/slicer-org/deploys?filter=deploy-download-preview
        description: 'Deploy Preview processing.'

    # See https://github.com/marketplace/actions/jekyll-action-ts
    - name: ðŸ”¨ install dependencies & build site
      uses: limjh16/jekyll-action-ts@c5e4c83672987df379d6924ca6dfa8891ac1c067 # v2
      with:
        enable_cache: true
        custom_opts: ${{ matrix.custom_opts }}

    - name: 'Evaluate download template [release_and_nightly]'
      if: env.deploy_download_preview == 'true'
      uses: cuchi/jinja2-action@3fa06acb38601d3caea4c5ce0416e268a8799d71 # v1.2.1
      with:
        template: _site/download.html
        data_file: _data/template_test_data/download_release_and_nightly.json
        output_file: _site/download_release_and_nightly.html

    - name: 'Evaluate download template [only_release]'
      if: env.deploy_download_preview == 'true'
      uses: cuchi/jinja2-action@3fa06acb38601d3caea4c5ce0416e268a8799d71 # v1.2.1
      with:
        template: _site/download.html
        data_file: _data/template_test_data/download_only_release.json
        output_file: _site/download_only_release.html

    - name: 'Evaluate download template [only_nightly]'
      if: env.deploy_download_preview == 'true'
      uses: cuchi/jinja2-action@3fa06acb38601d3caea4c5ce0416e268a8799d71 # v1.2.1
      with:
        template: _site/download.html
        data_file: _data/template_test_data/download_only_nightly.json
        output_file: _site/download_only_nightly.html

    - name: 'Evaluate download template [incomplete_releases]'
      if: env.deploy_download_preview == 'true'
      uses: cuchi/jinja2-action@3fa06acb38601d3caea4c5ce0416e268a8799d71 # v1.2.1
      with:
        template: _site/download.html
        data_file: _data/template_test_data/download_incomplete_releases.json
        output_file: _site/download_incomplete_releases.html

    - name: 'Upload website build'
      if: matrix.branch != 'deploy-download-preview'
      uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
      with:
        name: ${{ matrix.branch }}-website-build
        path: ./_site
        retention-days: 1

    # See https://github.com/marketplace/actions/github-pages-action
    - name: ðŸš€ deploy
      if: |
        github.ref == 'refs/heads/main' || env.deploy_download_preview == 'true'
      uses: peaceiris/actions-gh-pages@373f7f263a76c20808c831209c920827a82a2847 # v3.9.3
      with:
        force_orphan: true
        github_token: ${{ secrets.SLICERBOT_GITHUB_TOKEN }}
        publish_dir: ./_site
        publish_branch: ${{ matrix.branch }}
        user_name: 'Slicer Bot'
        user_email: 'slicerbot@users.noreply.github.com'

    # See https://github.com/ouzi-dev/commit-status-updater
    - name: Update status check for deploy-download-preview
      if: env.deploy_download_preview == 'true'
      uses: ouzi-dev/commit-status-updater@219d3f932547cad092e384c7a36bf4d963739c35 # v2.0.1
      with:
        name: 'netlify/deploy-download-preview'
        status: 'success'
        url: https://deploy-download-preview--slicer-org.netlify.app/download.html
        description: 'Deploy Preview ready!'

    - name: Wait for Netlify to deploy 'deploy-download-preview' branch
      if: env.deploy_download_preview == 'true'
      run: sleep 30s
      shell: bash

    - name: Capture deploy-download-preview screenshot [release_and_nightly]
      if: env.deploy_download_preview == 'true'
      uses: ./.github/actions/screenshot-website-imgur-upload
      id: capture_deploy_download_preview_release_and_nightly
      with:
        source_url: https://deploy-download-preview--slicer-org.netlify.app/download_release_and_nightly.html
        imgur_client_id: ${{secrets.SLICER_IMGUR_CLIENT_ID}}

    - name: Capture deploy-download-preview screenshot [only_release]
      if: env.deploy_download_preview == 'true'
      uses: ./.github/actions/screenshot-website-imgur-upload
      id: capture_deploy_download_preview_only_release
      with:
        source_url: https://deploy-download-preview--slicer-org.netlify.app/download_only_release.html
        imgur_client_id: ${{secrets.SLICER_IMGUR_CLIENT_ID}}

    - name: Capture deploy-download-preview screenshot [only_nightly]
      if: env.deploy_download_preview == 'true'
      uses: ./.github/actions/screenshot-website-imgur-upload
      id: capture_deploy_download_preview_only_nightly
      with:
        source_url: https://deploy-download-preview--slicer-org.netlify.app/download_only_nightly.html
        imgur_client_id: ${{secrets.SLICER_IMGUR_CLIENT_ID}}

    - name: Capture deploy-download-preview screenshot [incomplete_releases]
      if: env.deploy_download_preview == 'true'
      uses: ./.github/actions/screenshot-website-imgur-upload
      id: capture_deploy_download_preview_incomplete_releases
      with:
        source_url: https://deploy-download-preview--slicer-org.netlify.app/download_incomplete_releases.html
        imgur_client_id: ${{secrets.SLICER_IMGUR_CLIENT_ID}}

    # See https://github.com/thollander/actions-comment-pull-request
    - name: Add Pull Request comment including screenshot
      if: env.deploy_download_preview == 'true'
      uses: thollander/actions-comment-pull-request@632cf9ce90574d125be56b5f3405cda41a84e2fd # v2.3.1
      env:
        IMG_URL_0: ${{ steps.capture_deploy_download_preview_release_and_nightly.outputs.imgur_url }}
        IMG_URL_1: ${{ steps.capture_deploy_download_preview_only_release.outputs.imgur_url }}
        IMG_URL_2: ${{ steps.capture_deploy_download_preview_only_nightly.outputs.imgur_url }}
        IMG_URL_3: ${{ steps.capture_deploy_download_preview_incomplete_releases.outputs.imgur_url }}
        MESSAGE: |
          ### download.slicer.org preview
          _:warning: The download preview is a static website generated using mock data [^1], is temporary and may be updated at anytime [^2]_
          | Screenshot from https://deploy-download-preview--slicer-org.netlify.app/download_release_and_nightly.html | Screenshot from https://deploy-download-preview--slicer-org.netlify.app/download_only_release.html | Screenshot from https://deploy-download-preview--slicer-org.netlify.app/download_only_nightly.html |
          |--|--|--|
          | ![Screenshot]({0}) | ![Screenshot]({1}) | ![Screenshot]({2}) |
          | Screenshot from https://deploy-download-preview--slicer-org.netlify.app/download_release_and_nightly.html |
          |--|
          | ![Screenshot]({3}) |
          [^1]: See [front matter](https://jekyllrb.com/docs/front-matter/) variable `download_mock` associated with https://raw.githubusercontent.com/Slicer/slicer.org/main/download.markdown
          [^2]: Due to limitation of Netlify preventing us from having multiple [deploy previews](https://docs.netlify.com/site-deploys/deploy-previews/) associated with a single pull request and the [impossibility](https://github.community/t/make-secrets-available-to-builds-of-forks/16166) of using repository secret in a workflow associated with a pull-request originating from forks, the `deploy-download-preview` site is only updated for pull request originating from this repository and will be overriden after another pull request is pushed or updated.
      with:
        message: ${{ format(env.MESSAGE, env.IMG_URL_0, env.IMG_URL_1, env.IMG_URL_2, env.IMG_URL_3) }}
        GITHUB_TOKEN: ${{ secrets.SLICERBOT_GITHUB_TOKEN }}

