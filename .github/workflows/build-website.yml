name: build-website
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  jekyll:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        branch: [slicer-org, download-slicer-org, deploy-download-preview]
        include:
          - branch: download-slicer-org
            custom_opts: '--config _config.yml,_config_download.yml'
          - branch: deploy-download-preview
            custom_opts: '--config _config.yml,_config_download.yml,_config_netlify_deploy_download_preview.yml'
    env:
      deploy_download_preview: ${{ matrix.branch == 'deploy-download-preview' && github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' }}
    steps:
    - name: ðŸ“‚ setup
      uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

    - name: ðŸ’Ž setup ruby
      uses: ruby/setup-ruby@319066216501fbd5e2d568f14b7d68c19fb67a5d # v1
      with:
        ruby-version: 2.6 # can change this to 2.7 or whatever version you prefer

    # See https://github.com/ouzi-dev/commit-status-updater
    - name: Update status check for deploy-download-preview to pending
      if: env.deploy_download_preview == 'true'
      uses: ouzi-dev/commit-status-updater@ce8553fad082977ceadd109fdcbd8ff2fcaf5547 # v1.1.2
      with:
        name: 'netlify/deploy-download-preview'
        status: 'pending'
        url: https://app.netlify.com/sites/slicer-org/deploys?filter=deploy-download-preview
        description: 'Deploy Preview processing.'

    # See https://github.com/marketplace/actions/jekyll-action-ts
    - name: ðŸ”¨ install dependencies & build site
      uses: limjh16/jekyll-action-ts@9edf74e2e5aaa10d272c427efb8702a45a70a0b2 # v2
      with:
        enable_cache: true
        custom_opts: ${{ matrix.custom_opts }}

    - name: 'Upload website build'
      if: matrix.branch != 'deploy-download-preview'
      uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
      with:
        name: ${{ matrix.branch }}-website-build
        path: ./_site
        retention-days: 1

    # See https://github.com/marketplace/actions/github-pages-action
    - name: ðŸš€ deploy
      if: |
        github.ref == 'refs/heads/main' || env.deploy_download_preview == 'true'
      uses: peaceiris/actions-gh-pages@64b46b4226a4a12da2239ba3ea5aa73e3163c75b # v3
      with:
        force_orphan: true
        github_token: ${{ secrets.SLICERBOT_GITHUB_TOKEN }}
        publish_dir: ./_site
        publish_branch: ${{ matrix.branch }}
        user_name: 'Slicer Bot'
        user_email: 'slicerbot@users.noreply.github.com'

    # See https://github.com/ouzi-dev/commit-status-updater
    - name: Update status check for deploy-download-preview
      if: env.deploy_download_preview == 'true'
      uses: ouzi-dev/commit-status-updater@ce8553fad082977ceadd109fdcbd8ff2fcaf5547 # v1.1.2
      with:
        name: 'netlify/deploy-download-preview'
        status: 'success'
        url: https://deploy-download-preview--slicer-org.netlify.app/download.html
        description: 'Deploy Preview ready!'

    - name: Wait for Netlify to deploy 'deploy-download-preview' branch
      if: env.deploy_download_preview == 'true'
      run: sleep 30s
      shell: bash

    # See https://github.com/swinton/screenshot-website
    - name: Capture deploy-download-preview screenshot
      if: env.deploy_download_preview == 'true'
      uses: swinton/screenshot-website@5fcf4889015d277ef5e9635eba1fd1c2304a0d3e # v1.x
      id: capture_step
      with:
        source: https://deploy-download-preview--slicer-org.netlify.app/download.html
        destination: ${{ matrix.branch }}-screenshot.png
        full-page: true

    # See https://github.com/devicons/public-upload-to-imgur
    - name: Upload screenshot to imgur
      if: env.deploy_download_preview == 'true'
      uses: devicons/public-upload-to-imgur@352cf5f2805c692539a96cfe49a09669e6fca88e # v2.2.2
      id: imgur_step
      with:
        path: ${{ steps.capture_step.outputs.path }}
        client_id: ${{secrets.SLICER_IMGUR_CLIENT_ID}}

    # See https://github.com/actions/github-script
    - name: Extract imgur URL
      if: env.deploy_download_preview == 'true'
      uses: actions/github-script@9b7ebbb458768465bb03f28bbef5aa6b5d9d5baf # v5
      id: extract_imgur_url_step
      env:
        IMGUR_URLS: ${{ steps.imgur_step.outputs.imgur_urls }}
      with:
        script: |
          const { IMGUR_URLS } = process.env
          if (IMGUR_URLS) {
            const imgur_url = JSON.parse(IMGUR_URLS)[0]
            console.log(imgur_url)
            return imgur_url
          }
        result-encoding: string

    # See https://github.com/thollander/actions-comment-pull-request
    - name: Add Pull Request comment including screenshot
      if: env.deploy_download_preview == 'true'
      uses: thollander/actions-comment-pull-request@675cdfe1695d33e816e060460a72feafee079d3f # v1.0.4
      env:
        IMG_URL: ${{ steps.extract_imgur_url_step.outputs.result }}
        MESSAGE: |
          ### download.slicer.org preview
          _:warning: The download preview is a static website generated using mock data [^1], is temporary and may be updated at anytime [^2]_
          | Screenshot from https://deploy-download-preview--slicer-org.netlify.app/download.html|
          |--|
          | ![Screenshot]({0}) |
          [^1]: See [front matter](https://jekyllrb.com/docs/front-matter/) variable `download_mock` associated with https://raw.githubusercontent.com/Slicer/slicer.org/main/download.markdown
          [^2]: Due to limitation of Netlify preventing us from having multiple [deploy previews](https://docs.netlify.com/site-deploys/deploy-previews/) associated with a single pull request and the [impossibility](https://github.community/t/make-secrets-available-to-builds-of-forks/16166) of using repository secret in a workflow associated with a pull-request originating from forks, the `deploy-download-preview` site is only updated for pull request originating from this repository and will be overriden after another pull request is pushed or updated.
      with:
        message: ${{ format(env.MESSAGE, env.IMG_URL) }}
        GITHUB_TOKEN: ${{ secrets.SLICERBOT_GITHUB_TOKEN }}

